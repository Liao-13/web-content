{
    "openapi": "3.0.1",
    "info": {
        "title": "Restful API copy",
        "description": "",
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "Collection Operations (v2)"
        },
        {
            "name": "Vector Operations (v2)"
        },
        {
            "name": "Partition Operations (v2)"
        },
        {
            "name": "User Operations (v2)"
        },
        {
            "name": "Role Operations (v2)"
        },
        {
            "name": "Index Operations (v2)"
        },
        {
            "name": "Alias Operations (v2)"
        }
    ],
    "paths": {
        "/v2/vectordb/entities/delete": {
            "post": {
                "summary": "Delete",
                "x-apifox-folder": "Vector Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation deletes entities by their IDs or with a boolean expression.",
                "tags": [
                    "Vector Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the target database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of an existing collection."
                                    },
                                    "filter": {
                                        "type": "string",
                                        "description": "A scalar filtering condition to filter matching entities.    The value defaults to an empty string, indicating that no condition applies. Setting both **id** and **filter** results in an error.\nYou can set this parameter to an empty string to skip scalar filtering. To build a scalar filtering condition, refer to [Boolean Expression Rules](https://milvus.io/docs/boolean.md). "
                                    },
                                    "partitionName": {
                                        "type": "string",
                                        "description": "The name of a partition in the current collection. \nIf specified, the data is to be deleted from the specified partition."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "filter",
                                    "partitionName"
                                ],
                                "required": [
                                    "collectionName",
                                    "filter"
                                ],
                                "x-apifox-ignore-properties": []
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A dictionary contains the number of deleted entities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "x-apifox-orders": [],
                                            "properties": {},
                                            "x-apifox-ignore-properties": [],
                                            "x-apifox-folder": "Schemas"
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "Schemas"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132386875-run",
                "security": []
            }
        },
        "/v2/vectordb/entities/insert": {
            "post": {
                "summary": "Insert",
                "x-apifox-folder": "Vector Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation inserts data into a specific collection. You can insert a maximum of 100 entities at a time. To insert large volumes of data, please use [the bulk-insert API](https://docs.zilliz.com/docs/data-import).",
                "tags": [
                    "Vector Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the target database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of an existing collection."
                                    },
                                    "data": {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "x-apifox-orders": [],
                                                "properties": {},
                                                "x-apifox-ignore-properties": []
                                            },
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "x-apifox-orders": [],
                                                    "x-apifox-ignore-properties": []
                                                }
                                            }
                                        ],
                                        "description": "The data to insert into the current collection.\nThe data to insert should be a dictionary that matches the schema of the current collection or a list of such dictionaries. "
                                    },
                                    "partitionName": {
                                        "type": "string",
                                        "description": "The name of a partition in the current collection. \nIf specified, the data is to be inserted into the specified partition."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "data",
                                    "partitionName"
                                ],
                                "required": [
                                    "data",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A dictionary contains information about the number of inserted entities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "insertCount": {
                                                    "type": "integer",
                                                    "description": "The number of inserted entities."
                                                },
                                                "insertIds": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "An array of the IDs of inserted entities."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "insertCount",
                                                "insertIds"
                                            ],
                                            "x-apifox-ignore-properties": [],
                                            "x-apifox-folder": "Schemas"
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "Schemas"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "insertCount": 10,
                                                "insertIds": [
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800,
                                                    448300048035776800
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132386905-run",
                "security": []
            }
        },
        "/v2/vectordb/entities/query": {
            "post": {
                "summary": "Query",
                "x-apifox-folder": "Vector Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation conducts a filtering on the scalar field with a specified boolean expression.",
                "tags": [
                    "Vector Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection to which this operation applies."
                                    },
                                    "filter": {
                                        "type": "string",
                                        "description": "The filter used to find matches for the search."
                                    },
                                    "outputFields": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "An array of fields to return along with the search results."
                                    },
                                    "partitionNames": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "description": "PartitionName"
                                        },
                                        "description": "The name of the partitions to which this operation applies."
                                    }
                                },
                                "x-apifox-refs": {},
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "filter",
                                    "outputFields",
                                    "partitionNames"
                                ],
                                "required": [
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of dictionaries with each dictionary representing a queried entity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {},
                                                "x-apifox-orders": [],
                                                "x-apifox-ignore-properties": []
                                            }
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                {
                                                    "color": "pink_8682",
                                                    "id": 448300048035776800
                                                },
                                                {
                                                    "color": "pink_9298",
                                                    "id": 448300048035776800
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132386908-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/has": {
            "post": {
                "summary": "Has Collection",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation checks whether a collection exists.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation. Setting this to None indicates that this operation times out when any response returns or an error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database in which to check the existence of a collection."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of an existing collection."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "required": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A boolean value indicates whether the specified partition exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {
                                        "01HHH35TZX2TCVTZBQKXKX6K2A": {
                                            "x-apifox-overrides": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rowCount": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "x-apifox-orders": [
                                                        "rowCount"
                                                    ],
                                                    "required": [
                                                        "rowCount"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ],
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "01HHH35TZX2TCVTZBQKXKX6K2A",
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "has": {
                                                    "type": "boolean",
                                                    "description": "A boolean value indicates whether the specified partition exists."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "has"
                                            ],
                                            "required": [
                                                "has"
                                            ],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "has": true
                                            }
                                        }
                                    },
                                    "2": {
                                        "summary": "Failure",
                                        "value": {
                                            "code": 1802,
                                            "message": "reason for failure"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "x-200:err message": {
                        "description": "err message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "message"
                                    ],
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132414690-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/rename": {
            "post": {
                "summary": "Rename Collection",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation renames an existing collection and optionally moves the collection to a new database.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HK7J1JFBPZZW9W62DMMBS7FF": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            },
                                            "collectionName": {
                                                "type": "string",
                                                "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHHAGCVE37R139X5S96YXH0Z",
                                            "collectionName"
                                        ],
                                        "required": [
                                            "collectionName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHHAGCVE37R139X5S96YXH0Z": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "dbName": {
                                                        "type": "string",
                                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "dbName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "dbName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    },
                                    "newDbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs after this operation.\nThe value defaults to **default**. Setting this to a database rather than the one the collection belongs to before this operation moves this collection to the specified database.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "newCollectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection after this operation.\nSetting this to the value of **old_collection_name** results in a **MilvusException**."
                                    }
                                },
                                "required": [
                                    "newCollectionName",
                                    "collectionName"
                                ],
                                "x-apifox-orders": [
                                    "01HK7J1JFBPZZW9W62DMMBS7FF",
                                    "newDbName",
                                    "newCollectionName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "dbName",
                                    "collectionName"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132425007-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/get_stats": {
            "post": {
                "summary": "Get Collection Stats",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operations gets the number of entities in a collection.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database which the collection belongs to. Setting this to a non-existing database results in an error."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection to check.\nSetting this to a non-existing database results in an error."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "required": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The number of entities in a collection.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {
                                        "01HHH317CQPQ10K4E3XHXH1Q1P": {
                                            "x-apifox-overrides": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rowCount": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "x-apifox-orders": [
                                                        "rowCount"
                                                    ],
                                                    "required": [
                                                        "rowCount"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ],
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "01HHH317CQPQ10K4E3XHXH1Q1P",
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "rowCount": {
                                                    "type": "integer",
                                                    "description": "The number of entities."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "rowCount"
                                            ],
                                            "required": [
                                                "rowCount"
                                            ],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "rowCount": 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "x-200:err message": {
                        "description": "err message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "message"
                                    ],
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132425538-run",
                "security": []
            }
        },
        "/v2/vectordb/entities/upsert": {
            "post": {
                "summary": "Upsert",
                "x-apifox-folder": "Vector Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation inserts new records into the database or updates existing ones.  Currently, this endpoint does not apply to the collections that have autoId enabled.",
                "tags": [
                    "Vector Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection in which to upsert data."
                                    },
                                    "data": {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "x-apifox-orders": [],
                                                "properties": {},
                                                "x-apifox-ignore-properties": []
                                            },
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "x-apifox-orders": [],
                                                    "x-apifox-ignore-properties": []
                                                }
                                            }
                                        ],
                                        "description": "The data to insert into the current collection. \nThe data to insert should be a dictionary that matches the schema of the current collection or a list of such dictionaries.\n"
                                    },
                                    "partitionName": {
                                        "type": "string",
                                        "description": "The name of a partition in the current collection. \nIf specified, the data is to be inserted into the specified partition."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "data",
                                    "partitionName"
                                ],
                                "required": [
                                    "data",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A MutationResult object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "upsertCount": {
                                                    "type": "integer",
                                                    "description": "The number of inserted entities."
                                                },
                                                "upsertIds": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "An array of the IDs of inserted entities."
                                                }
                                            },
                                            "x-apifox-refs": {},
                                            "x-apifox-orders": [
                                                "upsertCount",
                                                "upsertIds"
                                            ],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "Schemas"
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132449466-run",
                "security": []
            }
        },
        "/v2/vectordb/entities/get": {
            "post": {
                "summary": "Get",
                "x-apifox-folder": "Vector Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation gets specific entities by their IDs.",
                "tags": [
                    "Vector Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection to which this operation applies."
                                    },
                                    "id": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        ],
                                        "description": "A specific entity ID or a list of entity IDs."
                                    },
                                    "outputFields": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "An array of fields to return along with the search results."
                                    },
                                    "partitionNames": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "description": "PartitionName"
                                        },
                                        "description": "The name of the partitions to which this operation applies."
                                    }
                                },
                                "x-apifox-refs": {},
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "id",
                                    "outputFields",
                                    "partitionNames"
                                ],
                                "required": [
                                    "collectionName",
                                    "id"
                                ],
                                "x-apifox-ignore-properties": []
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of dictionaries with each dictionary representing a queried entity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {},
                                                "x-apifox-orders": [],
                                                "x-apifox-ignore-properties": []
                                            }
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                {
                                                    "color": "pink_9298",
                                                    "id": 448300048035776800
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132466166-run",
                "security": []
            }
        },
        "/v2/vectordb/entities/search": {
            "post": {
                "summary": "Search",
                "x-apifox-folder": "Vector Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation conducts a vector similarity search with an optional scalar filtering expression.",
                "tags": [
                    "Vector Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection to which this operation applies."
                                    },
                                    "vector": {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            },
                                            "x-apifox-folder": ""
                                        },
                                        "description": "A list of vector embeddings.\n<include target=\"milvus\">Milvus</include><include target=\"zilliz\">Zilliz Cloud</include> searches for the most similar vector embeddings to the specified ones."
                                    },
                                    "annsField": {
                                        "type": "string"
                                    },
                                    "filter": {
                                        "type": "string",
                                        "description": "The filter used to find matches for the search."
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "description": "The total number of entities to return.\nYou can use this parameter in combination with **offset** in **param** to enable pagination.\nThe sum of this value and **offset** in **param** should be less than 16,384. "
                                    },
                                    "offset": {
                                        "type": "integer",
                                        "description": "    The number of records to skip in the search result.      You can use this parameter in combination with limit to enable pagination.     The sum of this value and limit should be less than 16,384. "
                                    },
                                    "groupingField": {
                                        "type": "string",
                                        "description": "https://zilliverse.feishu.cn/docx/S3brdwmUHoG33dxhifpcruAYnsb"
                                    },
                                    "outputFields": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "An array of fields to return along with the search results."
                                    },
                                    "searchParams": {
                                        "description": " The parameter settings specific to this operation.\n- **metric_type** (*str*) -\n  -   The metric type applied to this operation. This should be the same as the one used when you index the vector field specified above. \n  -   Possible values are **L2**, **IP**, and **COSINE**.\n- **params** (dict) -\n  -   Additional parameters\n  - **radius** (float) -\n    -    Determines the threshold of least similarity. When setting `metric_type` to `L2`, ensure that this value is greater than that of **range_filter**. Otherwise, this value should be lower than that of **range_filter**. \n  - **range_filter**  (float) -  \n    -    Refines the search to vectors within a specific similarity range. When setting `metric_type` to `IP` or `COSINE`, ensure that this value is greater than that of **radius**. Otherwise, this value should be lower than that of **radius**. \n<include target=\"milvus\">\nFor details on other applicable search parameters, refer to [In-memory Index](https://milvus.io/docs/index.md) and [On-disk Index](https://milvus.io/docs/disk_index.md).\n</include>\n<include target=\"zilliz\">\nFor details on other applicable search parameters, read [AUTOINDEX Explained](https://docs.zilliz.com/docs/autoindex-explained) to get more.\n</include>",
                                        "type": "object",
                                        "properties": {
                                            "radius": {
                                                "type": "integer",
                                                "description": "      Determines the threshold of least similarity. When setting metric_type to L2, ensure that this value is greater than that of range_filter. Otherwise, this value should be lower than that of range_filter. "
                                            },
                                            "range_filter": {
                                                "type": "integer",
                                                "description": "      Refines the search to vectors within a specific similarity range. When setting metric_type to IP or COSINE, ensure that this value is greater than that of radius. Otherwise, this value should be lower than that of radius. "
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "radius",
                                            "range_filter"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": ""
                                    },
                                    "partitionNames": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "description": "PartitionName"
                                        },
                                        "description": "The name of the partitions to which this operation applies."
                                    }
                                },
                                "x-apifox-refs": {},
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "vector",
                                    "annsField",
                                    "filter",
                                    "limit",
                                    "offset",
                                    "groupingField",
                                    "outputFields",
                                    "searchParams",
                                    "partitionNames"
                                ],
                                "required": [
                                    "collectionName",
                                    "vector",
                                    "searchParams"
                                ],
                                "x-apifox-ignore-properties": []
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the search results.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {},
                                                "x-apifox-orders": [],
                                                "x-apifox-ignore-properties": []
                                            }
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                {
                                                    "color": "orange_6781",
                                                    "distance": 1,
                                                    "id": 448300048035776800
                                                },
                                                {
                                                    "color": "red_4794",
                                                    "distance": 0.9353201,
                                                    "id": 448300048035776800
                                                },
                                                {
                                                    "color": "grey_8510",
                                                    "distance": 0.7733054,
                                                    "id": 448300048035776800
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132466289-run",
                "security": []
            }
        },
        "/v2/vectordb/partitions/list": {
            "post": {
                "summary": "List Partitions",
                "x-apifox-folder": "Partition Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation lists all partitions in the database used in the current connection.",
                "tags": [
                    "Partition Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the target database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection to which the partition belongs."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "required": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of partition names.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "A list of item objects."
                                            },
                                            "description": "A list of partition names"
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                "_default"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132471404-run",
                "security": []
            }
        },
        "/v2/vectordb/partitions/create": {
            "post": {
                "summary": "Create Partition",
                "x-apifox-folder": "Partition Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation creates a partition in a collection. ",
                "tags": [
                    "Partition Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            },
                                            "collectionName": {
                                                "type": "string",
                                                "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHHAGCVE37R139X5S96YXH0Z",
                                            "collectionName"
                                        ],
                                        "required": [
                                            "collectionName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHHAGCVE37R139X5S96YXH0Z": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "dbName": {
                                                        "type": "string",
                                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "dbName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "dbName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    },
                                    "partitionName": {
                                        "type": "string",
                                        "description": "The name of the target parition."
                                    }
                                },
                                "required": [
                                    "partitionName",
                                    "collectionName"
                                ],
                                "x-apifox-orders": [
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP",
                                    "partitionName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132471740-run",
                "security": []
            }
        },
        "/v2/vectordb/partitions/drop": {
            "post": {
                "summary": "Drop Partition",
                "x-apifox-folder": "Partition Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation drops the current partition. ",
                "tags": [
                    "Partition Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": true,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            },
                                            "collectionName": {
                                                "type": "string",
                                                "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHHAGCVE37R139X5S96YXH0Z",
                                            "collectionName"
                                        ],
                                        "required": [
                                            "collectionName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHHAGCVE37R139X5S96YXH0Z": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "dbName": {
                                                        "type": "string",
                                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "dbName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "dbName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    },
                                    "partitionName": {
                                        "type": "string",
                                        "description": "The name of the target parition."
                                    }
                                },
                                "required": [
                                    "partitionName",
                                    "collectionName"
                                ],
                                "x-apifox-orders": [
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP",
                                    "partitionName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132471847-run",
                "security": []
            }
        },
        "/v2/vectordb/users/create": {
            "post": {
                "summary": "Create User",
                "x-apifox-folder": "User Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation creates a new user with a corresponding password.",
                "tags": [
                    "User Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "The corresponding password to the new user to create. \nThe password must be a string of 8 to 64 characters and must include at least three of the following character types: uppercase letters, lowercase letters, numbers, and special characters."
                                    }
                                },
                                "x-apifox-orders": [
                                    "01HHKX7XPAX9WZ7W4GJJ2W1FXY",
                                    "password"
                                ],
                                "required": [
                                    "password",
                                    "userName"
                                ],
                                "x-apifox-refs": {
                                    "01HHKX7XPAX9WZ7W4GJJ2W1FXY": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "userName": {
                                                "type": "string",
                                                "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "userName"
                                        ],
                                        "required": [
                                            "userName"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "x-apifox-ignore-properties": [
                                    "userName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132472858-run",
                "security": []
            }
        },
        "/v2/vectordb/users/update_password": {
            "post": {
                "summary": "Update User Password",
                "x-apifox-folder": "User Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation updates the password for a specific user.",
                "tags": [
                    "User Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authorization token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "The corresponding password to the new user to create. \nThe password must be a string of 8 to 64 characters and must include at least three of the following character types: uppercase letters, lowercase letters, numbers, and special characters."
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "description": "The new password for the specified user.    The password must be a string of 8 to 64 characters and must include at least three of the following character types: uppercase letters, lowercase letters, numbers, and special characters."
                                    }
                                },
                                "x-apifox-orders": [
                                    "01HHKX9JA6N05F6TE4NMG46P4X",
                                    "newPassword"
                                ],
                                "required": [
                                    "newPassword",
                                    "userName",
                                    "password"
                                ],
                                "x-apifox-refs": {
                                    "01HHKX9JA6N05F6TE4NMG46P4X": {
                                        "type": "object",
                                        "properties": {
                                            "userName": {
                                                "type": "string",
                                                "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                            },
                                            "password": {
                                                "type": "string",
                                                "description": "The corresponding password to the new user to create. \nThe password must be a string of 8 to 64 characters and must include at least three of the following character types: uppercase letters, lowercase letters, numbers, and special characters."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHKX7XPAX9WZ7W4GJJ2W1FXY",
                                            "password"
                                        ],
                                        "required": [
                                            "password",
                                            "userName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHKX7XPAX9WZ7W4GJJ2W1FXY": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "userName": {
                                                        "type": "string",
                                                        "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "userName"
                                                ],
                                                "required": [
                                                    "userName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "userName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "x-apifox-ignore-properties": [
                                    "userName",
                                    "password"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132472873-run",
                "security": []
            }
        },
        "/v2/vectordb/users/drop": {
            "post": {
                "summary": "Drop User",
                "x-apifox-folder": "User Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation deletes an existing user.",
                "tags": [
                    "User Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "x-apifox-overrides": {},
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                    }
                                },
                                "x-apifox-orders": [
                                    "userName"
                                ],
                                "required": [
                                    "userName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132472944-run",
                "security": []
            }
        },
        "/v2/vectordb/users/describe": {
            "post": {
                "summary": "Describe User",
                "x-apifox-folder": "User Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation describes the detailed information of a specific user.",
                "tags": [
                    "User Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "description": "  The name of the user to describe."
                                    }
                                },
                                "x-apifox-orders": [
                                    "userName"
                                ],
                                "required": [
                                    "userName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "成功",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "A list of item objects."
                                            },
                                            "description": "A list of roles already assigned to the user."
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                "public"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132472985-run",
                "security": []
            }
        },
        "/v2/vectordb/users/list": {
            "post": {
                "summary": "List Users",
                "x-apifox-folder": "User Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation lists the information of all existing users.",
                "tags": [
                    "User Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object that contains contains the user information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "A list of item objects."
                                            },
                                            "description": "A list of user names"
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                "root"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132473039-run",
                "security": []
            }
        },
        "/v2/vectordb/users/grant_role": {
            "post": {
                "summary": "Grant Role To User",
                "x-apifox-folder": "User Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation grants a specified role to the current user. Once granted the role, the user gets permissions allowed for the current role and can perform certain operations.",
                "tags": [
                    "User Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHM2QS57QE5706K1CDHNZ6SV": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "userName": {
                                                "type": "string",
                                                "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "userName"
                                        ],
                                        "required": [
                                            "userName"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                    },
                                    "roleName": {
                                        "type": "string",
                                        "description": "The name of the target role."
                                    }
                                },
                                "required": [
                                    "roleName",
                                    "userName"
                                ],
                                "x-apifox-orders": [
                                    "01HHM2QS57QE5706K1CDHNZ6SV",
                                    "roleName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "userName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132475752-run",
                "security": []
            }
        },
        "/v2/vectordb/roles/list": {
            "post": {
                "summary": "List Roles",
                "x-apifox-folder": "Role Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation lists the information about all existing roles.",
                "tags": [
                    "Role Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {},
                                "x-apifox-ignore-properties": [],
                                "x-apifox-orders": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A RoleInfo object that contains a list of RoleItem objects.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "A list of item objects."
                                            }
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                "admin",
                                                "public"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132478314-run",
                "security": []
            }
        },
        "/v2/vectordb/roles/describe": {
            "post": {
                "summary": "Describe Role",
                "x-apifox-folder": "Role Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation describes the details of a specified role.",
                "tags": [
                    "Role Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {},
                                "properties": {
                                    "roleName": {
                                        "type": "string",
                                        "description": "The name of the role."
                                    }
                                },
                                "required": [
                                    "roleName"
                                ],
                                "x-apifox-orders": [
                                    "roleName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An object that contains the detailed desription of a role.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "object_type": {
                                                        "type": "string",
                                                        "description": "  The type of the object to which the privilege belongs."
                                                    },
                                                    "privilege": {
                                                        "type": "string",
                                                        "description": "  The privilege that is granted to the role."
                                                    },
                                                    "object_name": {
                                                        "type": "string",
                                                        "description": "  The name of the object to which the role is granted the specified privilege."
                                                    },
                                                    "db_name": {
                                                        "type": "string",
                                                        "description": "  The name of the database in which this operation has been executed."
                                                    },
                                                    "grantor": {
                                                        "type": "string",
                                                        "description": "  The name of the user who granted a specific role to a user."
                                                    }
                                                },
                                                "required": [
                                                    "object_type",
                                                    "privilege",
                                                    "object_name",
                                                    "db_name"
                                                ],
                                                "x-apifox-orders": [
                                                    "object_type",
                                                    "privilege",
                                                    "object_name",
                                                    "db_name",
                                                    "grantor"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": ""
                                            },
                                            "description": "A list of privilege items."
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                {
                                                    "dbName": "*",
                                                    "grantor": "root",
                                                    "objectName": "*",
                                                    "objectType": "Collection",
                                                    "privilege": "IndexDetail"
                                                },
                                                {
                                                    "dbName": "*",
                                                    "grantor": "root",
                                                    "objectName": "*",
                                                    "objectType": "Global",
                                                    "privilege": "DescribeCollection"
                                                },
                                                {
                                                    "dbName": "*",
                                                    "grantor": "root",
                                                    "objectName": "*",
                                                    "objectType": "Global",
                                                    "privilege": "ShowCollections"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132478330-run",
                "security": []
            }
        },
        "/v2/vectordb/roles/create": {
            "post": {
                "summary": "Create Role",
                "x-apifox-folder": "Role Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation creates the current role. ",
                "tags": [
                    "Role Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Then authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {},
                                "properties": {
                                    "roleName": {
                                        "type": "string",
                                        "description": "The name of the role."
                                    }
                                },
                                "required": [
                                    "roleName"
                                ],
                                "x-apifox-orders": [
                                    "roleName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132478620-run",
                "security": []
            }
        },
        "/v2/vectordb/roles/drop": {
            "post": {
                "summary": "Drop Role",
                "x-apifox-folder": "Role Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation drops an existing role. The operation will succeed if the specified role exists. Otherwise, this operation will fail.",
                "tags": [
                    "Role Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {},
                                "properties": {
                                    "roleName": {
                                        "type": "string",
                                        "description": "The name of the role."
                                    }
                                },
                                "required": [
                                    "roleName"
                                ],
                                "x-apifox-orders": [
                                    "roleName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132478845-run",
                "security": []
            }
        },
        "/v2/vectordb/roles/grant_privilege": {
            "post": {
                "summary": "Grant Privilege To Role",
                "x-apifox-folder": "Role Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation grants a privilege to the current role.",
                "tags": [
                    "Role Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HKM81R4X4ZPQNGM4CEBWV263": {
                                        "type": "object",
                                        "x-apifox-refs": {},
                                        "properties": {
                                            "roleName": {
                                                "type": "string",
                                                "description": "The name of the role."
                                            }
                                        },
                                        "required": [
                                            "roleName"
                                        ],
                                        "x-apifox-orders": [
                                            "roleName"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "roleName": {
                                        "type": "string",
                                        "description": "The name of the role."
                                    },
                                    "objectType": {
                                        "type": "string",
                                        "description": " The type of the object to which the privilege belongs."
                                    },
                                    "objectName": {
                                        "type": "string",
                                        "description": " The name of the object to which the role is granted the specified privilege."
                                    },
                                    "privilege": {
                                        "type": "string",
                                        "description": " The privilege that is granted to the role."
                                    }
                                },
                                "x-apifox-orders": [
                                    "01HKM81R4X4ZPQNGM4CEBWV263",
                                    "objectType",
                                    "objectName",
                                    "privilege"
                                ],
                                "required": [
                                    "objectType",
                                    "privilege",
                                    "objectName",
                                    "roleName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "roleName"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132479344-run",
                "security": []
            }
        },
        "/v2/vectordb/indexes/create": {
            "post": {
                "summary": "Create Index",
                "x-apifox-folder": "Index Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This creates a named index for a target field, which can either be a vector field or a scalar field.",
                "tags": [
                    "Index Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHP4HPBXF5B9P9A41EN5E9VJ": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            },
                                            "collectionName": {
                                                "type": "string",
                                                "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHHAGCVE37R139X5S96YXH0Z",
                                            "collectionName"
                                        ],
                                        "required": [
                                            "collectionName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHHAGCVE37R139X5S96YXH0Z": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "dbName": {
                                                        "type": "string",
                                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "dbName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "dbName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    },
                                    "indexParams": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "metricType": {
                                                    "type": "string",
                                                    "description": "The similarity metric type used to build the index.\nPossible values for float vector embeddings.\n- For an Milvus instance, possible values are **L2**, **IP**, and **COSINE**, and those for binary vector embeddings are **Jaccard** and **Hamming**.  For details, refer to [Similarity Metrics](https://milvus.io/docs/metric.md).\n- For a Zilliz Cloud cluster, possible values are **L2**, **IP**, and **COSINE**. Read [Similarity Metrics Explained](https://docs.zilliz.com/docs/search-metrics-explained) to get more."
                                                },
                                                "fieldName": {
                                                    "type": "string",
                                                    "description": "The name of the target field on which an index is to be created."
                                                },
                                                "indexName": {
                                                    "type": "string",
                                                    "description": "The name of the index to create, the value defaults to the target field name."
                                                },
                                                "indexConfig": {
                                                    "description": "The index type and related settings. For details, refer to [Vector Indexes](https://milvus.io/docs/index.md).",
                                                    "type": "object",
                                                    "properties": {
                                                        "index_type": {
                                                            "type": "string",
                                                            "description": "The type of the index to create"
                                                        },
                                                        "M": {
                                                            "type": "string",
                                                            "description": "The maximum degree of the node and applies only when index_type is set to __HNSW__."
                                                        },
                                                        "efConstruction": {
                                                            "type": "string",
                                                            "description": "The search scope. This applies only when **index_type** is set to **HNSW**"
                                                        },
                                                        "nlist": {
                                                            "type": "string",
                                                            "description": "The number of cluster units. This applies to IVF-related index types."
                                                        }
                                                    },
                                                    "x-apifox-orders": [
                                                        "index_type",
                                                        "M",
                                                        "efConstruction",
                                                        "nlist"
                                                    ],
                                                    "required": [
                                                        "index_type"
                                                    ],
                                                    "x-apifox-ignore-properties": [],
                                                    "x-apifox-folder": ""
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "metricType",
                                                "fieldName",
                                                "indexName",
                                                "indexConfig"
                                            ],
                                            "required": [
                                                "metricType",
                                                "fieldName",
                                                "indexName"
                                            ],
                                            "x-apifox-ignore-properties": [],
                                            "x-apifox-folder": ""
                                        },
                                        "description": "  The parameters that apply to the index-building process."
                                    }
                                },
                                "required": [
                                    "indexParams",
                                    "collectionName"
                                ],
                                "x-apifox-orders": [
                                    "01HHP4HPBXF5B9P9A41EN5E9VJ",
                                    "indexParams"
                                ],
                                "x-apifox-ignore-properties": [
                                    "dbName",
                                    "collectionName"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A Status object indicating whether this operation succeeds.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132479820-run",
                "security": []
            }
        },
        "/v2/vectordb/indexes/drop": {
            "post": {
                "summary": "Drop Index",
                "x-apifox-folder": "Index Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation deletes index from a specified collection.",
                "tags": [
                    "Index Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            },
                                            "collectionName": {
                                                "type": "string",
                                                "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHHAGCVE37R139X5S96YXH0Z",
                                            "collectionName"
                                        ],
                                        "required": [
                                            "collectionName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHHAGCVE37R139X5S96YXH0Z": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "dbName": {
                                                        "type": "string",
                                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "dbName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "dbName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    },
                                    "indexName": {
                                        "type": "string",
                                        "description": "The name fo the target index."
                                    }
                                },
                                "x-apifox-orders": [
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP",
                                    "indexName"
                                ],
                                "required": [
                                    "indexName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132479834-run",
                "security": []
            }
        },
        "/v2/vectordb/indexes/describe": {
            "post": {
                "summary": "Describe Index",
                "x-apifox-folder": "Index Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation describes the current index.",
                "tags": [
                    "Index Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of an the collection to which the index belongs."
                                    },
                                    "indexName": {
                                        "type": "string",
                                        "description": "The name of the index to describe."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "indexName"
                                ],
                                "required": [
                                    "indexName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An object that contains the detailed description of the current index.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "x-apifox-refs": {},
                                                "properties": {
                                                    "fieldName": {
                                                        "type": "string",
                                                        "description": "The name of the target field."
                                                    },
                                                    "indexName": {
                                                        "type": "string",
                                                        "description": "The name of the index."
                                                    },
                                                    "indexState": {
                                                        "description": "The status of the indexing progress.",
                                                        "type": "string",
                                                        "x-apifox-folder": ""
                                                    },
                                                    "indexType": {
                                                        "type": "string",
                                                        "description": "The type of this index."
                                                    },
                                                    "indexedRows": {
                                                        "type": "integer",
                                                        "description": "The total number o rows that have been indexed."
                                                    },
                                                    "metricType": {
                                                        "type": "string",
                                                        "description": "The type of the metric."
                                                    },
                                                    "pendingRows": {
                                                        "type": "integer",
                                                        "description": "The number of rows that are waiting to be indexed."
                                                    },
                                                    "totalRows": {
                                                        "type": "integer",
                                                        "description": "The total number of entities/rows"
                                                    },
                                                    "failReason": {
                                                        "type": "string",
                                                        "description": "The reason for the failure to build indexes."
                                                    }
                                                },
                                                "required": [
                                                    "indexName",
                                                    "totalRows",
                                                    "pendingRows",
                                                    "indexedRows",
                                                    "indexState",
                                                    "fieldName",
                                                    "indexType",
                                                    "metricType"
                                                ],
                                                "x-apifox-orders": [
                                                    "fieldName",
                                                    "indexName",
                                                    "indexState",
                                                    "indexType",
                                                    "indexedRows",
                                                    "metricType",
                                                    "pendingRows",
                                                    "totalRows",
                                                    "failReason"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": ""
                                            }
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                {
                                                    "failReason": "",
                                                    "fieldName": "my_vector",
                                                    "indexName": "my_vector_index",
                                                    "indexState": "Finished",
                                                    "indexType": "IVF_FLAT",
                                                    "indexedRows": 0,
                                                    "metricType": "L2",
                                                    "pendingRows": 0,
                                                    "totalRows": 0
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132480176-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/load": {
            "post": {
                "summary": "Load Collection",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation loads the data of the current collection into memory. ",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Header",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.\n",
                        "required": true,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "x-apifox-overrides": {},
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    }
                                },
                                "x-apifox-orders": [
                                    "01HHHAGCVE37R139X5S96YXH0Z",
                                    "collectionName"
                                ],
                                "required": [
                                    "collectionName"
                                ],
                                "x-apifox-refs": {
                                    "01HHHAGCVE37R139X5S96YXH0Z": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "dbName"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "x-apifox-ignore-properties": [
                                    "dbName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132480582-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/release": {
            "post": {
                "summary": "Release Collection",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation releases the data of the current collection from memory.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation. Setting this to None indicates that this operation times out when any response returns or an error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the cpllection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target colletion.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "required": [
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132480906-run",
                "security": []
            }
        },
        "/v2/vectordb/partitions/load": {
            "post": {
                "summary": "Load Partitions",
                "x-apifox-folder": "Partition Operations (v2)",
                "x-apifox-status": "developing",
                "deprecated": false,
                "description": "This operation loads the data of the current partition into memory.",
                "tags": [
                    "Partition Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            },
                                            "collectionName": {
                                                "type": "string",
                                                "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHHAGCVE37R139X5S96YXH0Z",
                                            "collectionName"
                                        ],
                                        "required": [
                                            "collectionName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHHAGCVE37R139X5S96YXH0Z": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "dbName": {
                                                        "type": "string",
                                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "dbName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "dbName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    },
                                    "partitionNames": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The list of names of the target partitions."
                                    }
                                },
                                "required": [
                                    "partitionNames",
                                    "collectionName"
                                ],
                                "x-apifox-orders": [
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP",
                                    "partitionNames"
                                ],
                                "x-apifox-ignore-properties": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132480928-run",
                "security": []
            }
        },
        "/v2/vectordb/partitions/release": {
            "post": {
                "summary": "Release Partitions",
                "x-apifox-folder": "Partition Operations (v2)",
                "x-apifox-status": "developing",
                "deprecated": false,
                "description": "This operation releases the data of the current partition from memory.",
                "tags": [
                    "Partition Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            },
                                            "collectionName": {
                                                "type": "string",
                                                "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "01HHHAGCVE37R139X5S96YXH0Z",
                                            "collectionName"
                                        ],
                                        "required": [
                                            "collectionName"
                                        ],
                                        "x-apifox-refs": {
                                            "01HHHAGCVE37R139X5S96YXH0Z": {
                                                "x-apifox-overrides": {},
                                                "type": "object",
                                                "properties": {
                                                    "dbName": {
                                                        "type": "string",
                                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                                    }
                                                },
                                                "x-apifox-orders": [
                                                    "dbName"
                                                ],
                                                "x-apifox-ignore-properties": [],
                                                "x-apifox-folder": "httpRequest"
                                            }
                                        },
                                        "x-apifox-ignore-properties": [
                                            "dbName"
                                        ],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    },
                                    "partitionNames": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The list of names of the target partitions."
                                    }
                                },
                                "required": [
                                    "partitionNames",
                                    "collectionName"
                                ],
                                "x-apifox-orders": [
                                    "01HHHAJ1WWBFQ6P0EGBKMR7GEP",
                                    "partitionNames"
                                ],
                                "x-apifox-ignore-properties": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-132481107-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/create": {
            "post": {
                "summary": "Create Collection",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation creates a collection in a specified cluster.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation. Setting this to None indicates that this operation times out when any response returns or an error occurs.",
                        "required": true,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database. <zilliz>This parameter applies only to dedicated clusters.</zilliz>"
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection to create."
                                    },
                                    "dimension": {
                                        "type": "integer",
                                        "description": "The number of dimensions a vector value should have.\nThis is required if **dtype** of this field is set to **DataType.FLOAT_VECTOR**."
                                    },
                                    "metricType": {
                                        "type": "string",
                                        "description": "The metric type applied to this operation. \nPossible values are **L2**, **IP**, and **COSINE**."
                                    },
                                    "idType": {
                                        "type": "string",
                                        "description": "The data type of the primary field. This parameter is designed for the quick-setup of a collection and will be ignored if __schema__ is defined."
                                    },
                                    "autoID": {
                                        "type": "string",
                                        "default": "false",
                                        "description": "Whether the primary field automatically increments. This parameter is designed for the quick-setup of a collection and will be ignored if __schema__ is defined."
                                    },
                                    "primaryFieldName": {
                                        "type": "string",
                                        "description": "The name of the primary field. This parameter is designed for the quick-setup of a collection and will be ignored if __schema__ is defined."
                                    },
                                    "vectorFieldName": {
                                        "type": "string",
                                        "description": "The name of the vector field. This parameter is designed for the quick-setup of a collection and will be ignored if __schema__ is defined."
                                    },
                                    "schema": {
                                        "description": "The schema is responsible for organizing data in the target collection. A valid schema should have multiple fields, which must include a primary key, a vector field, and several scalar fields.",
                                        "type": "object",
                                        "properties": {
                                            "autoId": {
                                                "type": "string",
                                                "description": "Whether allows the primary field to automatically increment. Setting this to True makes the primary field automatically increment. In this case, the primary field should not be included in the data to insert to avoid errors. Set this parameter in the field with is_primary set to True."
                                            },
                                            "enableDynamicField": {
                                                "type": "string"
                                            },
                                            "fields": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "fieldName": {
                                                            "type": "string",
                                                            "description": "The name of the field to create in the target collection"
                                                        },
                                                        "dataType": {
                                                            "type": "string",
                                                            "description": "The data type of the field values."
                                                        },
                                                        "elementDataType": {
                                                            "type": "string",
                                                            "description": "The data type of the elements in an array field."
                                                        },
                                                        "isPrimary": {
                                                            "type": "boolean",
                                                            "description": "Whether the current field is the primary field. Setting this to True makes the current field the primary field."
                                                        },
                                                        "isPartitionKey": {
                                                            "type": "boolean",
                                                            "description": "Whether the current field serves as the partition key. Setting this to True makes the current field serve as the partition key. In this case, MilvusZilliz Cloud manages all partitions in the current collection."
                                                        },
                                                        "elementTypeParams": {
                                                            "type": "object",
                                                            "properties": {
                                                                "max_length": {
                                                                    "type": "string",
                                                                    "description": "An optional parameter for VarChar values that determines the maximum length of the value in the current field."
                                                                },
                                                                "dim": {
                                                                    "type": "string",
                                                                    "description": "An optional parameter for FloatVector or BinaryVector fields that determines the vector dimension."
                                                                },
                                                                "max_capacity": {
                                                                    "type": "string",
                                                                    "description": "An optional parameter for Array field values that determines the maximum number of elements in the current array field."
                                                                }
                                                            },
                                                            "x-apifox-orders": [
                                                                "max_length",
                                                                "dim",
                                                                "max_capacity"
                                                            ],
                                                            "required": [
                                                                "max_length",
                                                                "dim",
                                                                "max_capacity"
                                                            ],
                                                            "description": "Extra field parameters.",
                                                            "x-apifox-ignore-properties": []
                                                        }
                                                    },
                                                    "x-apifox-orders": [
                                                        "fieldName",
                                                        "dataType",
                                                        "elementDataType",
                                                        "isPrimary",
                                                        "isPartitionKey",
                                                        "elementTypeParams"
                                                    ],
                                                    "required": [
                                                        "fieldName",
                                                        "dataType"
                                                    ],
                                                    "description": "The name of the field to create in the target collection",
                                                    "x-apifox-ignore-properties": [],
                                                    "x-apifox-folder": ""
                                                }
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "autoId",
                                            "enableDynamicField",
                                            "fields"
                                        ],
                                        "required": [
                                            "autoId",
                                            "enableDynamicField",
                                            "fields"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": ""
                                    },
                                    "indexParams": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "metricType": {
                                                    "type": "string",
                                                    "description": "The similarity metric type used to build the index.\nPossible values for float vector embeddings.\n- For an Milvus instance, possible values are **L2**, **IP**, and **COSINE**, and those for binary vector embeddings are **Jaccard** and **Hamming**.  For details, refer to [Similarity Metrics](https://milvus.io/docs/metric.md).\n- For a Zilliz Cloud cluster, possible values are **L2**, **IP**, and **COSINE**. Read [Similarity Metrics Explained](https://docs.zilliz.com/docs/search-metrics-explained) to get more."
                                                },
                                                "fieldName": {
                                                    "type": "string",
                                                    "description": "The name of the target field on which an index is to be created."
                                                },
                                                "indexName": {
                                                    "type": "string",
                                                    "description": "The name of the index to create, the value defaults to the target field name."
                                                },
                                                "indexConfig": {
                                                    "description": "The index type and related settings. For details, refer to [Vector Indexes](https://milvus.io/docs/index.md).",
                                                    "type": "object",
                                                    "properties": {
                                                        "index_type": {
                                                            "type": "string",
                                                            "description": "The type of the index to create"
                                                        },
                                                        "M": {
                                                            "type": "string",
                                                            "description": "The maximum degree of the node and applies only when index_type is set to __HNSW__."
                                                        },
                                                        "efConstruction": {
                                                            "type": "string",
                                                            "description": "The search scope. This applies only when **index_type** is set to **HNSW**"
                                                        },
                                                        "nlist": {
                                                            "type": "string",
                                                            "description": "The number of cluster units. This applies to IVF-related index types."
                                                        }
                                                    },
                                                    "x-apifox-orders": [
                                                        "index_type",
                                                        "M",
                                                        "efConstruction",
                                                        "nlist"
                                                    ],
                                                    "required": [
                                                        "index_type"
                                                    ],
                                                    "x-apifox-ignore-properties": [],
                                                    "x-apifox-folder": ""
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "metricType",
                                                "fieldName",
                                                "indexName",
                                                "indexConfig"
                                            ],
                                            "required": [
                                                "metricType",
                                                "fieldName",
                                                "indexName"
                                            ],
                                            "x-apifox-ignore-properties": [],
                                            "x-apifox-folder": ""
                                        },
                                        "description": "The parameters that apply to the index-building process."
                                    },
                                    "params": {
                                        "description": "Extra parameters for the collection.",
                                        "type": "object",
                                        "properties": {
                                            "max_length": {
                                                "type": "string",
                                                "description": "The maximum number of characters in a VarChar field. This parameter is mandatory when the current field type is VarChar."
                                            },
                                            "enableDynamicField": {
                                                "type": "string",
                                                "description": "Whether to enable the reserved dynamic field. If set to true, non-schema-defined fields are saved in the reserved dynamic field as key-value pairs."
                                            },
                                            "shardsNum": {
                                                "type": "string",
                                                "description": "The number of shards to create along with the current collection."
                                            },
                                            "consistencyLevel": {
                                                "type": "string",
                                                "description": "The consistency level of the collection. Possible values are __STRONG__, __BOUNDED__, __SESSION__, and __EVENTUALLY__."
                                            },
                                            "partitionsNum": {
                                                "type": "string",
                                                "description": "The number of partitions to create along with the current collection. This parameter is mandatory if one field of the collection has been designated as the partition key."
                                            },
                                            "ttlSeconds": {
                                                "type": "string",
                                                "description": "The time-to-live (TTL) period of the collection. If set, the collection is to be dropped once the period ends."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "max_length",
                                            "enableDynamicField",
                                            "shardsNum",
                                            "consistencyLevel",
                                            "partitionsNum",
                                            "ttlSeconds"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": ""
                                    }
                                },
                                "x-apifox-refs": {},
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "dimension",
                                    "metricType",
                                    "idType",
                                    "autoID",
                                    "primaryFieldName",
                                    "vectorFieldName",
                                    "schema",
                                    "indexParams",
                                    "params"
                                ],
                                "required": [
                                    "autoID"
                                ],
                                "x-apifox-ignore-properties": []
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns A collection object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "x-apifox-orders": [],
                                            "properties": {},
                                            "x-apifox-ignore-properties": [],
                                            "x-apifox-folder": "Schemas"
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "Schemas"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-133013323-run",
                "security": []
            }
        },
        "/v2/vectordb/partitions/has": {
            "post": {
                "summary": "Has Partition",
                "x-apifox-folder": "Partition Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation checks whether a partition exists.",
                "tags": [
                    "Partition Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of an existing database. The value defaults to __default__."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of an existing collection."
                                    },
                                    "partitionName": {
                                        "type": "string",
                                        "description": "The name of the partition to test."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "partitionName"
                                ],
                                "required": [
                                    "partitionName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A boolean value indicating whether the specified partition exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {
                                        "01HHH35TZX2TCVTZBQKXKX6K2A": {
                                            "x-apifox-overrides": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rowCount": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "x-apifox-orders": [
                                                        "rowCount"
                                                    ],
                                                    "required": [
                                                        "rowCount"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ],
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "01HHH35TZX2TCVTZBQKXKX6K2A",
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "has": {
                                                    "type": "boolean",
                                                    "description": "A boolean value indicates whether the specified partition exists."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "has"
                                            ],
                                            "required": [
                                                "has"
                                            ],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "has": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-133235189-run",
                "security": []
            }
        },
        "/v2/vectordb/partitions/get_stats": {
            "post": {
                "summary": "Get Partition Statistics",
                "x-apifox-folder": "Partition Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operations gets the number of entities in a partition.",
                "tags": [
                    "Partition Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of an existing database. The value defaults to __default__."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of an existing collection."
                                    },
                                    "partitionName": {
                                        "type": "string",
                                        "description": "The name of the target partition of this operation. "
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "partitionName"
                                ],
                                "required": [
                                    "partitionName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "成功",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {
                                        "01HHH317CQPQ10K4E3XHXH1Q1P": {
                                            "x-apifox-overrides": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rowCount": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "x-apifox-orders": [
                                                        "rowCount"
                                                    ],
                                                    "required": [
                                                        "rowCount"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ],
                                            "type": "object",
                                            "properties": {}
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "01HHH317CQPQ10K4E3XHXH1Q1P",
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "rowCount": {
                                                    "type": "integer",
                                                    "description": "The number of entities."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "rowCount"
                                            ],
                                            "required": [
                                                "rowCount"
                                            ],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "rowCount": 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-133236153-run",
                "security": []
            }
        },
        "/v2/vectordb/users/revoke_role": {
            "post": {
                "summary": "Revoker Role From User",
                "x-apifox-folder": "User Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation revokes a privilege granted to the current role.\n> Notes\n> To complete this operation, you need to enable authentication on your Milvus instance. For details, refer to [Authenticate User Access](https://milvus.io/docs/authenticate.md).",
                "tags": [
                    "User Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Then authentication token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HHM2QS57QE5706K1CDHNZ6SV": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "userName": {
                                                "type": "string",
                                                "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "userName"
                                        ],
                                        "required": [
                                            "userName"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "description": "The name of the target user. The value should start with a letter and can only contain underline, letters and numbers."
                                    },
                                    "roleName": {
                                        "type": "string",
                                        "description": "The name of the target role."
                                    }
                                },
                                "required": [
                                    "roleName",
                                    "userName"
                                ],
                                "x-apifox-orders": [
                                    "01HHM2QS57QE5706K1CDHNZ6SV",
                                    "roleName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "userName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-133663804-run",
                "security": []
            }
        },
        "/v2/vectordb/roles/revoke_privilege": {
            "post": {
                "summary": "Revoke Privilege From Role",
                "x-apifox-folder": "Role Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation revokes a privilege granted to the current role.",
                "tags": [
                    "Role Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-apifox-refs": {
                                    "01HKM8TRVJ5K2CP1QQ9SBPQKB1": {
                                        "type": "object",
                                        "x-apifox-refs": {},
                                        "properties": {
                                            "roleName": {
                                                "type": "string",
                                                "description": "The name of the role."
                                            }
                                        },
                                        "required": [
                                            "roleName"
                                        ],
                                        "x-apifox-orders": [
                                            "roleName"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "properties": {
                                    "roleName": {
                                        "type": "string",
                                        "description": "The name of the role."
                                    },
                                    "objectType": {
                                        "type": "string",
                                        "description": "The type of the object to which the privilege belongs."
                                    },
                                    "objectName": {
                                        "type": "string",
                                        "description": "The name of the object to which the role is granted the specified privilege."
                                    },
                                    "privilege": {
                                        "type": "string",
                                        "description": "The privilege that is granted to the role."
                                    }
                                },
                                "x-apifox-orders": [
                                    "01HKM8TRVJ5K2CP1QQ9SBPQKB1",
                                    "objectType",
                                    "objectName",
                                    "privilege"
                                ],
                                "required": [
                                    "objectType",
                                    "privilege",
                                    "objectName",
                                    "roleName"
                                ],
                                "x-apifox-ignore-properties": [
                                    "roleName"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-133670760-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/get_load_state": {
            "post": {
                "summary": "Get Collection Load State",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation returns the load status of a specific collection.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation. Setting this to None indicates that this operation times out when any response returns or an error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of a database to which the collection belongs."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of a collection."
                                    },
                                    "partitionNames": {
                                        "type": "string",
                                        "description": "A list of partition names. If any partition names are specified, releasing any of these partitions results in the return of a NotLoad state."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "partitionNames"
                                ],
                                "required": [
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A LoadState object that indicates the load status of the specified collection.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "loadState": {
                                                    "type": "string",
                                                    "description": "An object that indicates the load status of the specified collection.\nThe possible states are as follows:\n- **Loaded**\n  -  Indicates that the specified collection is loaded.\n- **Loading**\n  -  Indicates that the specified collection is being loaded.\n- **NotExist**\n  -  Indicates that the specified collection does not exist. \n  -  Including a non-existing partition in **partition_names** results in a **MilvusException**.\n- **NotLoad**\n  -  Indicates that the specified collection is not loaded."
                                                },
                                                "loadProgress": {
                                                    "type": "integer",
                                                    "description": "An integer that indicates the load progress in the percentage of the specified collection."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "loadState",
                                                "loadProgress"
                                            ],
                                            "required": [
                                                "loadState",
                                                "loadProgress"
                                            ],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "loadProgress": 100,
                                                "loadState": "LoadStateLoaded"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-134912702-run",
                "security": []
            }
        },
        "/v2/vectordb/indexes/list": {
            "post": {
                "summary": "List Indexes",
                "x-apifox-folder": "Index Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation lists all indexes of a specific collection.",
                "tags": [
                    "Index Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation.\nSetting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of an existing collection. Setting this to a non-existing collection leads to an error."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "required": [
                                    "dbName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The names of all built indexes in a list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "A list of index names."
                                        }
                                    },
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                "my_vector_index"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-134917147-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/list": {
            "post": {
                "summary": "List Collections",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation lists all collections in the database used in the current connection.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation. Setting this to None indicates that this operation times out when any response returns or an error occurs.\n",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of an existing database."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName"
                                ],
                                "required": [
                                    "dbName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "This operation lists all collections in the database used in the current connection.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "A list of item objects."
                                            }
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": [
                                                "quick_setup_new",
                                                "customized_setup_1",
                                                "customized_setup_2"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "x-200:err message": {
                        "description": "err message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "message"
                                    ],
                                    "required": [
                                        "code",
                                        "message"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-136173120-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/describe": {
            "post": {
                "summary": "Describe Collection",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "Describes the details of a collection.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation. Setting this to None indicates that this operation times out when any response returns or an error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection to describe."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "required": [
                                    "dbName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the specified collection in detail.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "collectionName": {
                                                    "type": "string",
                                                    "description": "The name of the current collection."
                                                },
                                                "autoID": {
                                                    "type": "boolean",
                                                    "description": "Whether the primary key of this collection automatically increments."
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "The description of the collection."
                                                },
                                                "enableDynamicField": {
                                                    "type": "boolean",
                                                    "description": "Whether the reserved dynamic field named $meta is enabled to save non-schema-defined fields and their values in key-value pairs."
                                                },
                                                "fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "The name of the current field."
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "description": "The data type of the field."
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "description": "The description of the field."
                                                            },
                                                            "autoId": {
                                                                "type": "boolean",
                                                                "description": "Whether this field automatically increments its value."
                                                            },
                                                            "partitionKey": {
                                                                "type": "boolean",
                                                                "description": "Whether this field serves as a partition key."
                                                            },
                                                            "primaryKey": {
                                                                "type": "boolean",
                                                                "description": "Whether this field serves as the primary key."
                                                            }
                                                        },
                                                        "x-apifox-orders": [
                                                            "name",
                                                            "type",
                                                            "description",
                                                            "autoId",
                                                            "partitionKey",
                                                            "primaryKey"
                                                        ],
                                                        "required": [
                                                            "name",
                                                            "description",
                                                            "autoId",
                                                            "partitionKey",
                                                            "primaryKey",
                                                            "type"
                                                        ],
                                                        "x-apifox-ignore-properties": []
                                                    },
                                                    "description": "The collection fields in an array"
                                                },
                                                "indexes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "fieldName": {
                                                                "type": "string",
                                                                "description": "The target field of this index."
                                                            },
                                                            "indexName": {
                                                                "type": "string",
                                                                "description": "The name of this index."
                                                            },
                                                            "metricType": {
                                                                "type": "string",
                                                                "description": "The metric type of this index."
                                                            }
                                                        },
                                                        "x-apifox-orders": [
                                                            "fieldName",
                                                            "indexName",
                                                            "metricType"
                                                        ],
                                                        "required": [
                                                            "fieldName",
                                                            "indexName",
                                                            "metricType"
                                                        ],
                                                        "x-apifox-ignore-properties": []
                                                    },
                                                    "description": "The created indexes in an array"
                                                },
                                                "load": {
                                                    "type": "string",
                                                    "description": "The load status of the current collection."
                                                },
                                                "shardsNum": {
                                                    "type": "integer",
                                                    "description": "The number of shards created along with the collection."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "collectionName",
                                                "autoID",
                                                "description",
                                                "enableDynamicField",
                                                "fields",
                                                "indexes",
                                                "load",
                                                "shardsNum"
                                            ],
                                            "required": [
                                                "collectionName",
                                                "load",
                                                "indexes",
                                                "fields",
                                                "enableDynamicField",
                                                "description",
                                                "autoID",
                                                "shardsNum"
                                            ],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "autoId": true,
                                                "collectionName": "quick_setup_new",
                                                "description": "",
                                                "enableDynamicField": true,
                                                "fields": [
                                                    {
                                                        "autoId": true,
                                                        "description": "",
                                                        "name": "id",
                                                        "partitionKey": false,
                                                        "primaryKey": true,
                                                        "type": "Int64"
                                                    },
                                                    {
                                                        "autoId": false,
                                                        "description": "",
                                                        "name": "vector",
                                                        "partitionKey": false,
                                                        "primaryKey": false,
                                                        "type": "FloatVector(5)"
                                                    }
                                                ],
                                                "indexes": [
                                                    {
                                                        "fieldName": "vector",
                                                        "indexName": "vector",
                                                        "metricType": "COSINE"
                                                    }
                                                ],
                                                "load": "LoadStateLoaded",
                                                "shardsNum": 1
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-136173121-run",
                "security": []
            }
        },
        "/v2/vectordb/collections/drop": {
            "post": {
                "summary": "Drop Collection",
                "x-apifox-folder": "Collection Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation drops the current collection and all data within the collection.",
                "tags": [
                    "Collection Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation. \nSetting this to **None** indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "x-apifox-overrides": {},
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection.\nSetting this to a non-existing collection results in a **MilvusException**."
                                    }
                                },
                                "x-apifox-orders": [
                                    "01HHHAGCVE37R139X5S96YXH0Z",
                                    "collectionName"
                                ],
                                "required": [
                                    "collectionName"
                                ],
                                "x-apifox-refs": {
                                    "01HHHAGCVE37R139X5S96YXH0Z": {
                                        "x-apifox-overrides": {},
                                        "type": "object",
                                        "properties": {
                                            "dbName": {
                                                "type": "string",
                                                "description": "The name of the database to which the collection belongs.\nSetting this to a non-existing database results in a **MilvusException**."
                                            }
                                        },
                                        "x-apifox-orders": [
                                            "dbName"
                                        ],
                                        "x-apifox-ignore-properties": [],
                                        "x-apifox-folder": "httpRequest"
                                    }
                                },
                                "x-apifox-ignore-properties": [
                                    "dbName"
                                ],
                                "x-apifox-folder": "httpRequest"
                            },
                            "example": ""
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object",
                                            "x-apifox-orders": [],
                                            "properties": {},
                                            "x-apifox-ignore-properties": [],
                                            "x-apifox-folder": "Schemas"
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "Schemas"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-136173122-run",
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v2/vectordb/aliases/list": {
            "post": {
                "summary": "List Aliases",
                "x-apifox-folder": "Alias Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation lists all existing collection aliases.",
                "tags": [
                    "Alias Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of an existing database. The value defaults to __default__."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName"
                                ],
                                "required": [
                                    "dbName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of collection aliases. ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "A list of item objects."
                                            }
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-140011728-run",
                "security": []
            }
        },
        "/v2/vectordb/aliases/describe": {
            "post": {
                "summary": "Describe Alias",
                "x-apifox-folder": "Alias Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation describes the details of a specific alias.",
                "tags": [
                    "Alias Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs."
                                    },
                                    "aliasName": {
                                        "type": "string",
                                        "description": "The name of the alias whose details are to be listed."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "aliasName"
                                ],
                                "required": [
                                    "dbName",
                                    "aliasName"
                                ],
                                "x-apifox-ignore-properties": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An alias object that contains the detailed description of an alias.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "dbName": {
                                                    "type": "string",
                                                    "description": "The name of the database to which the collection belongs."
                                                },
                                                "collectionName": {
                                                    "type": "string",
                                                    "description": "the name of the collection to which an alias belongs."
                                                },
                                                "aliasName": {
                                                    "type": "string",
                                                    "description": "The name of the alias."
                                                }
                                            },
                                            "x-apifox-orders": [
                                                "dbName",
                                                "collectionName",
                                                "aliasName"
                                            ],
                                            "required": [
                                                "dbName",
                                                "collectionName",
                                                "aliasName"
                                            ],
                                            "x-apifox-ignore-properties": [],
                                            "x-apifox-folder": ""
                                        }
                                    },
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": []
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {
                                                "aliasName": "alice",
                                                "collectionName": "quick_setup",
                                                "dbName": "default"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-140013376-run",
                "security": []
            }
        },
        "/v2/vectordb/aliases/alter": {
            "post": {
                "summary": "Alter Alias",
                "x-apifox-folder": "Alias Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation reassigns the alias of one collection to another.",
                "tags": [
                    "Alias Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection to reassign an alias to."
                                    },
                                    "aliasName": {
                                        "type": "string",
                                        "description": "The alias of the collection. "
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "aliasName"
                                ],
                                "required": [
                                    "aliasName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-140030506-run",
                "security": []
            }
        },
        "/v2/vectordb/aliases/drop": {
            "post": {
                "summary": "Drop Alias",
                "x-apifox-folder": "Alias Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation drops a specified alias. ",
                "tags": [
                    "Alias Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the collection to which the alias is assigned to."
                                    },
                                    "aliasName": {
                                        "type": "string",
                                        "description": "The alias to drop.\nWhen dropping an alias, you do not need to provide the collection name because one alias can only be assigned to exactly one collection. Therefore, the server knows which collection the specified alias belongs to."
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "aliasName"
                                ],
                                "required": [
                                    "aliasName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-140031011-run",
                "security": []
            }
        },
        "/v2/vectordb/aliases/create": {
            "post": {
                "summary": "Create Alias",
                "x-apifox-folder": "Alias Operations (v2)",
                "x-apifox-status": "testing",
                "deprecated": false,
                "description": "This operation creates an alias for an existing collection.",
                "tags": [
                    "Alias Operations (v2)"
                ],
                "parameters": [
                    {
                        "name": "Request-Timeout",
                        "in": "header",
                        "description": "The timeout duration for this operation in seconds. Setting this to None indicates that this operation timeouts when any response arrives or any error occurs.",
                        "required": false,
                        "example": "",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The authentication token.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dbName": {
                                        "type": "string",
                                        "description": "The name of the database to which the collection belongs."
                                    },
                                    "collectionName": {
                                        "type": "string",
                                        "description": "The name of the target collection to reassign an alias to."
                                    },
                                    "aliasName": {
                                        "type": "string",
                                        "description": "The alias of the collection. "
                                    }
                                },
                                "x-apifox-orders": [
                                    "dbName",
                                    "collectionName",
                                    "aliasName"
                                ],
                                "required": [
                                    "aliasName",
                                    "collectionName"
                                ],
                                "x-apifox-ignore-properties": [],
                                "x-apifox-folder": "httpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "None",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-apifox-refs": {},
                                    "x-apifox-orders": [
                                        "code",
                                        "data"
                                    ],
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "x-apifox-folder": ""
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {},
                                            "x-apifox-orders": [],
                                            "x-apifox-ignore-properties": []
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "data"
                                    ],
                                    "x-apifox-ignore-properties": [],
                                    "x-apifox-folder": "httpReturn"
                                },
                                "examples": {
                                    "1": {
                                        "summary": "Success",
                                        "value": {
                                            "code": 200,
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-run-in-apifox": "https://apifox.com/web/project/3737803/apis/api-140031427-run",
                "security": []
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "servers": []
}